name : Test solutions
on: [push]
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-dotnet@v3
                with:
                    dotnet-version: '7.0.x'
            -   uses: actions/setup-java@v4
                with:
                    distribution: 'microsoft'
                    java-version: '11'
            -   uses: ts-graphviz/setup-graphviz@v2
            -   uses: actions/setup-python@v4
                with:
                    python-version: '3.12'
            -   run: pip install edn_format
            -   name: Install gnuplot
                run: sudo apt-get install gnuplot -y
            -   name: Check dependencies
                run: |
                    dotnet --info
                    java -version
                    dot -V
                    gnuplot --version
                    python --version
            -   name: Download and isntall maelstrom program
                run: |
                    wget -c "https://github.com/jepsen-io/maelstrom/releases/download/v0.2.3/maelstrom.tar.bz2"
                    tar -xvf maelstrom.tar.bz2

            -   name: Check maelstrom installation
                run: ls -lah

            -   name: Build projeccts
                run: |
                    dotnet publish ./Echo/Echo.fsproj --no-self-contained -o ./bin/Echo/
                    dotnet publish ./UniqueIdGen/UniqueIdGen.fsproj --no-self-contained -o ./bin/UniqueIdGen/
                    dotnet publish ./Broadcast/Broadcast.fsproj --no-self-contained -o ./bin/Broadcast/

            -   name: Test Echo challenge
                run: ./maelstrom/maelstrom test -w echo --bin ./bin/Echo/Echo --node-count 10 --time-limit 1

            -   name: Test Unique Id Generation challenge
                run: ./maelstrom/maelstrom test -w unique-ids --bin ./bin/UniqueIdGen/UniqueIdGen --time-limit 30 --rate 1000 --node-count 3 --availability total --nemesis partition

            -   name: Test Single Node Broadcast challenge
                run: ./maelstrom/maelstrom test -w broadcast --bin ./bin/Broadcast/Broadcast --node-count 1 --time-limit 20 --rate 10 10

            -   name: Test Multi Node Broadcast challenge
                run: ./maelstrom/maelstrom test -w broadcast --bin ./bin/Broadcast/Broadcast --node-count 5 --time-limit 20 --rate 10 10

            -   name: Test Fault Tolerant Broadcast challenge
                run: ./maelstrom/maelstrom test -w broadcast --bin ./bin/Broadcast/Broadcast --node-count 5 --time-limit 20 --rate 10 --nemesis partition 10

            -   name: Test Efficient BroadCast, Part 1
                run: |
                    ./maelstrom/maelstrom test -w broadcast --bin ./bin/Broadcast/Broadcast --node-count 25 --time-limit 20 --rate 100 --latency 100 --nemesis partition 90
                    ./maelstrom/maelstrom test -w broadcast --bin ./bin/Broadcast/Broadcast --node-count 25 --time-limit 20 --rate 100 --latency 100 30
                    python ./.github/scripts/checker_3d.py --msgs-per-op 30 --median-latency 400 --max-latency 600
            -   name: Test Efficient BroadCast, Part 2
                run: |
                    ./maelstrom/maelstrom test -w broadcast --bin ./bin/Broadcast/Broadcast --node-count 25 --time-limit 20 --rate 100 --latency 100 150
                    python ./.github/scripts/checker_3d.py --msgs-per-op 20 --median-latency 1000 --max-latency 2000


